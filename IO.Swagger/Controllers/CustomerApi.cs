/*
 * CustomerManagement
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.4.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using IO.Swagger.Models;
using System.Linq;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CustomerApiController : ControllerBase
    { 
        /// <summary>
        /// Creates a &#39;Customer&#39;
        /// </summary>
        
        /// <param name="authorization">token to be passed as a header linked to the user whose identity is requested</param>
        /// <param name="customer">The Customer to be created</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Method Not allowed</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/customerManagement/customer")]
        [ValidateModelState]
        [SwaggerOperation("CreateCustomer")]
        [SwaggerResponse(statusCode: 201, type: typeof(Customer), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Method Not allowed")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal Server Error")]
        public virtual IActionResult CreateCustomer([FromHeader][Required()]string authorization, [FromBody]CustomerCreate customer)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Customer));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "{\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Customer>(exampleJson)
            : default(Customer);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List or find &#39;Customer&#39; objects
        /// </summary>
        
        /// <param name="authorization">token to be passed as a header linked to the user whose identity is requested</param>
        /// <param name="fields">Comma separated properties to display in response</param>
        /// <param name="offset">Requested index for start of resources to be provided in response</param>
        /// <param name="limit">Requested number of resources to be provided in response</param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Method Not allowed</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/customerManagement/customer")]
        [ValidateModelState]
        [SwaggerOperation("ListCustomer")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Customer>), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Method Not allowed")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal Server Error")]
        public virtual IActionResult ListCustomer([FromHeader][Required()]string authorization, [FromQuery]string fields, [FromQuery]int? offset, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Customer>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "[ {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n}, {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Customer>>(exampleJson)
            : default(List<Customer>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates partially a &#39;Customer&#39; by Id
        /// </summary>
        
        /// <param name="authorization">token to be passed as a header linked to the user whose identity is requested</param>
        /// <param name="id">Identifier of the Customer</param>
        /// <param name="customer">The Customer to be updated</param>
        /// <response code="200">Updated</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Method Not allowed</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPatch]
        [Route("/customerManagement/customer/{id}")]
        [ValidateModelState]
        [SwaggerOperation("PatchCustomer")]
        [SwaggerResponse(statusCode: 200, type: typeof(Customer), description: "Updated")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Method Not allowed")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal Server Error")]
        public virtual IActionResult PatchCustomer([FromHeader][Required()]string authorization, [FromRoute][Required]string id, [FromBody]CustomerUpdate customer)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Customer));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "{\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Customer>(exampleJson)
            : default(Customer);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieves a &#39;Customer&#39; by Id
        /// </summary>
        
        /// <param name="authorization">token to be passed as a header linked to the user whose identity is requested</param>
        /// <param name="id">Identifier of the Customer</param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="405">Method Not allowed</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/customerManagement/customer/{id}")]
        [ValidateModelState]
        [SwaggerOperation("RetrieveCustomer")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Customer>), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Not Found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Method Not allowed")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal Server Error")]
        public virtual IActionResult RetrieveCustomer([FromHeader][Required()]string authorization, [FromRoute][Required]string id)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Customer>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            if (authorization != "abc")
            {
                 return StatusCode(401, default(Error));
            }
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "[ {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n}, {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"contactMedium\" : [ {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  }, {\n    \"contactMediumType\" : \"emailAddress\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"preferred\" : true,\n    \"characteristic\" : {\n      \"country\" : \"country\",\n      \"emailAddress\" : \"emailAddress\",\n      \"mediumCharacteristicType\" : \"mediumCharacteristicType\",\n      \"phoneNumber\" : \"phoneNumber\",\n      \"stateOrProvince\" : \"stateOrProvince\",\n      \"city\" : \"city\",\n      \"faxNumber\" : \"faxNumber\",\n      \"postCode\" : \"postCode\",\n      \"street1\" : \"street1\",\n      \"street2\" : \"street2\"\n    }\n  } ],\n  \"creditProfile\" : [ {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  }, {\n    \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"creditScore\" : \"creditScore\",\n    \"tagCreditOnHold\" : \"tagCreditOnHold\",\n    \"validFor\" : {\n      \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"tagCreditScoring\" : \"tagCreditScoring\",\n    \"tagContractDailyCreditLimit\" : \"tagContractDailyCreditLimit\",\n    \"creditRiskRating\" : \"creditRiskRating\",\n    \"tagCreditLimit\" : 0,\n    \"tagCreditThreshold\" : \"tagCreditThreshold\",\n    \"tagContractPeriodicCreditLimit\" : \"tagContractPeriodicCreditLimit\"\n  } ],\n  \"agreement\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"validFor\" : {\n    \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"partyRoleType\" : {\n    \"partnershipId\" : \"partnershipId\",\n    \"name\" : \"name\",\n    \"partnershipName\" : \"partnershipName\",\n    \"partnershipHref\" : \"partnershipHref\"\n  },\n  \"relatedParty\" : [ {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"role\" : \"role\",\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"characteristic\" : [ {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  }, {\n    \"name\" : \"name\",\n    \"value\" : \"value\"\n  } ],\n  \"statusReason\" : \"statusReason\",\n  \"name\" : \"name\",\n  \"paymentMethod\" : [ {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"href\" : \"href\",\n  \"id\" : \"id\",\n  \"engagedParty\" : {\n    \"individual\" : [ {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    }, {\n      \"placeOfBirth\" : \"placeOfBirth\",\n      \"gender\" : \"gender\",\n      \"givenName\" : \"givenName\",\n      \"formattedName\" : \"formattedName\",\n      \"fullName\" : \"fullName\",\n      \"title\" : \"title\",\n      \"birthDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"nationality\" : \"nationality\",\n      \"countryOfBirth\" : \"countryOfBirth\",\n      \"familyName\" : \"familyName\",\n      \"middleName\" : \"middleName\",\n      \"location\" : \"location\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"maritalStatus\" : \"maritalStatus\",\n      \"status\" : \"status\"\n    } ],\n    \"partyRefType\" : \"Individual\",\n    \"organization\" : [ {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    }, {\n      \"tradingName\" : \"tradingName\",\n      \"organizationType\" : \"organizationType\",\n      \"nameType\" : \"nameType\",\n      \"isLegalEntity\" : \"isLegalEntity\",\n      \"id\" : \"id\",\n      \"href\" : \"href\",\n      \"status\" : \"status\"\n    } ],\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  },\n  \"account\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"href\" : \"href\",\n    \"id\" : \"id\"\n  } ],\n  \"status\" : \"status\"\n} ]";

            var customerList = new List<Customer>
            {
                new Customer
                {
                    Id = "1",
                    Name = "Test"
                },
                new Customer
                {
                    Id="5",
                    Name = "Daniel Yourdanov"
                },
                new Customer
                {
                    Id = "10",
                    Name = "Yuri"
                }
            };
            var customer = customerList.FirstOrDefault(x => x.Id == id);
            if (customer == null)
            {
                return StatusCode(404, default(Error));
            }
            //var example = exampleJson != null
            //? JsonConvert.DeserializeObject<List<Customer>>(exampleJson)
            //: default(List<Customer>);
            ////TODO: Change the data returned
            return new ObjectResult(customer);
        }
    }
}
